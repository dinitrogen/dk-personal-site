// Change this!
$amount: 6;
$smAmount: 4;

*,
*::before,
*::after {
  box-sizing: border-box;
}

.list {
  padding: 2rem;
  margin: 0;
  width: 100%;
  list-style-type: none;
  display: grid;
  grid-template-columns: repeat(#{$amount}, 1fr 2fr) 1fr;
  grid-auto-rows: 1fr 1fr;
  grid-gap: 1.5rem 2.5rem;
  --counter: 1;

  @media screen and (max-width: 768px) {
    grid-template-columns: repeat(#{$smAmount}, 1fr 2fr) 1fr;
  }
}

.list-item {
  position: relative;
  grid-column: 1 / span 3;
  grid-row: calc(var(--counter) + var(--counter)) / span 2;
  filter: drop-shadow(0 0 10px rgba(#444, 0.04));
  height: 0;
  padding-bottom: 90%;

  @for $i from 1 through $amount {
    &:nth-of-type(#{$amount}n + #{$i}) {
      grid-column: #{$i + $i - 1} / span 3;
      @if $i % 2 == 0 {
        grid-row: calc(var(--counter) + var(--counter) - 1) / span 2;
      }
    }
  }

  @for $i from 1 through 20 {
    &:nth-of-type(n + #{$i * $amount + 1}) {
      --counter: #{$i + 1};
    }
  }

  @media screen and (max-width: 768px) {
    @for $i from 1 through $smAmount {
      &:nth-of-type(#{$smAmount}n + #{$i}) {
        grid-column: #{$i + $i - 1} / span 3;
        @if $i % 2 == 0 {
          grid-row: calc(var(--counter) + var(--counter) - 1) / span 2;
        }
      }
    }

    @for $i from 1 through 20 {
      &:nth-of-type(n + #{$i * $smAmount + 1}) {
        --counter: #{$i + 1};
      }
    }
  }
}

.item-inside {
  position: absolute;
  height: 100%;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-family: sans-serif;
  font-size: 1.25rem;
  color: #111111;
  background-color: white;
  clip-path: polygon(75% 0, 100% 50%, 75% 100%, 25% 100%, 0 50%, 25% 0);
  padding: 2rem 25%;
}
